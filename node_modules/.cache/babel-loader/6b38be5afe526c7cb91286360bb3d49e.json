{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/reactproject/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css'; // Import component\n\nimport Forecast from \"./components/forecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"fae6fa0ed6e96f99493161cd7089d3a1\";\n\nfunction App() {\n  _s();\n\n  const [inputText, setInputText] = useState(\"\");\n  const [form, setState] = useState({\n    city: undefined,\n    day: undefined,\n    temp: undefined,\n    clouds: undefined,\n    rain: undefined,\n    high: undefined,\n    low: undefined\n  });\n\n  function inputTextHandler(e) {\n    console.log(e.target.value);\n    setInputText(e.target.value);\n  }\n\n  ;\n\n  async function getWeatherData(e) {\n    e.preventDefault();\n    var location = inputText; // make sure user inputs a valid city and state separated by comma\n\n    if (location.includes(',')) {\n      var locArr = location.split(',');\n      var city = locArr[0];\n      var state = locArr[1];\n      var country = \"USA\"; // fetch data from weather api\n\n      const dataToday = await fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + state + ',' + country + '&appid=' + API_key).then(res => res.json()).then(dataToday => dataToday);\n      const dataWeek = await fetch('https://api.openweathermap.org/data/2.5/forecast?q=' + city + ',' + state + ',' + country + '&appid=' + API_key).then(res => res.json()).then(dataWeek => console.log(dataWeek)); // Create array of unix timestamps that will be converted to weekdays\n\n      var unixArr = [dataToday.dt, dataWeek.list[0].dt, dataWeek.list[8].dt, dataWeek.list[16].dt, dataWeek.list[24].dt];\n      var weekDays = new Array(5); // Loop through array and convert each element from unix to weekday\n\n      for (var i = 0; i < unixArr.length; i++) {\n        var dateObject = new Date(unixArr[i] * 1000);\n        var day = dateObject.toLocaleString(\"en-US\", {\n          weekday: \"long\"\n        });\n        weekDays[i] = day;\n      } // Create array of converted temperatures (K - F)\n\n\n      var tempArr = [dataToday.main.temp, dataWeek.list[0].main.temp, dataWeek.list[8].main.temp, dataWeek.list[16].main.temp, dataWeek.list[24].main.temp];\n      convertTemp(tempArr);\n      setState({\n        city: city,\n        day: [weekDays[0], weekDays[1], weekDays[2], weekDays[3], weekDays[4]],\n        temp: [tempArr[0], tempArr[1], tempArr[2], tempArr[3], tempArr[4]],\n        clouds: 5\n      });\n    } else {\n      alert(\"Input a city and state separated by a comma\");\n    }\n\n    setInputText(\"\");\n  }\n\n  ; // function that converts kelvin to fahrenheit\n\n  function convertTemp(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      var kelvin = arr[i];\n      var fahrenheit = 9 / 5 * (kelvin - 273) + 32;\n      arr[i] = fahrenheit;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: getWeatherData,\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn2.iconfinder.com/data/icons/font-awesome/1792/search-512.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputText,\n          onChange: inputTextHandler,\n          placeholder: \"City, State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-ttl\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UKe19TdkI/ykhStP4Htu/l+LHXc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/evernolasco/reactproject/src/App.js"],"names":["React","useState","Forecast","API_key","App","inputText","setInputText","form","setState","city","undefined","day","temp","clouds","rain","high","low","inputTextHandler","e","console","log","target","value","getWeatherData","preventDefault","location","includes","locArr","split","state","country","dataToday","fetch","then","res","json","dataWeek","unixArr","dt","list","weekDays","Array","i","length","dateObject","Date","toLocaleString","weekday","tempArr","main","convertTemp","alert","arr","kelvin","fahrenheit"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\n\n// Import component\nimport Forecast from \"./components/forecast\";\n\nconst API_key = \"fae6fa0ed6e96f99493161cd7089d3a1\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [form, setState] = useState({\n    city: undefined,\n    day: undefined,\n    temp: undefined,\n    clouds: undefined,\n    rain: undefined,\n    high: undefined,\n    low: undefined\n  });\n\n  function inputTextHandler(e){\n\n    console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n\n  async function getWeatherData(e){\n    e.preventDefault();\n    var location = inputText;\n\n    // make sure user inputs a valid city and state separated by comma\n    if(location.includes(',')){\n      var locArr = location.split(',');\n\n      var city = locArr[0];\n      var state = locArr[1];\n      var country = \"USA\";\n\n      // fetch data from weather api\n      const dataToday = await fetch(\n        'https://api.openweathermap.org/data/2.5/weather?q='+city+','+state+','+country+'&appid='+API_key\n      ).then((res) => res.json())\n      .then((dataToday) => dataToday);\n\n      const dataWeek = await fetch(\n        'https://api.openweathermap.org/data/2.5/forecast?q='+city+','+state+','+country+'&appid='+API_key\n      ).then((res) => res.json())\n      .then((dataWeek) => console.log(dataWeek));\n\n      // Create array of unix timestamps that will be converted to weekdays\n      var unixArr = [dataToday.dt, dataWeek.list[0].dt, dataWeek.list[8].dt, dataWeek.list[16].dt, dataWeek.list[24].dt];\n      var weekDays = new Array(5);\n\n      // Loop through array and convert each element from unix to weekday\n      for (var i = 0; i < unixArr.length; i++){\n        var dateObject = new Date(unixArr[i] * 1000);\n        var day = dateObject.toLocaleString(\"en-US\", {weekday: \"long\"});\n        weekDays[i] = day;\n      }\n\n      // Create array of converted temperatures (K - F)\n      var tempArr = [dataToday.main.temp,\n                    dataWeek.list[0].main.temp,\n                    dataWeek.list[8].main.temp,\n                    dataWeek.list[16].main.temp,\n                    dataWeek.list[24].main.temp];\n      \n      convertTemp(tempArr);\n\n      setState({\n        city: city,\n        day: [weekDays[0], weekDays[1], weekDays[2], weekDays[3], weekDays[4]],\n        temp: [tempArr[0], tempArr[1], tempArr[2], tempArr[3], tempArr[4]],\n        clouds: 5\n      });\n    }\n    else{\n      alert(\"Input a city and state separated by a comma\");\n    }\n\n    setInputText(\"\");\n  };\n\n  // function that converts kelvin to fahrenheit\n  function convertTemp(arr){\n    for (var i = 0; i < arr.length; i++){\n      var kelvin = arr[i];\n      var fahrenheit = ((9/5) * (kelvin - 273)) + 32;\n      arr[i] = fahrenheit;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img className=\"logo\" src=\"\"/>\n        <form onSubmit={getWeatherData} className=\"search-bar\">\n          <img src=\"https://cdn2.iconfinder.com/data/icons/font-awesome/1792/search-512.png\"/>\n          <input value={inputText} onChange={inputTextHandler} placeholder=\"City, State\" />\n        </form>\n      </header>\n\n      <div className=\"location-ttl\"><h3>Location</h3></div>\n\n      <Forecast/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}