{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/reactproject/src/components/suggestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Import all icons\n\nimport thunderstormDay from \"./icons/thunderstorm-day.png\";\nimport thunderstormNight from \"./icons/thunderstorm-night.png\";\nimport drizzleDay from \"./icons/drizzle-day.png\";\nimport drizzleNight from \"./icons/drizzle-night.png\";\nimport rainDay from \"./icons/rain-day.png\";\nimport rainNight from \"./icons/rain-night.png\";\nimport snowDay from \"./icons/snow-day.png\";\nimport snowNight from \"./icons/snow-night.png\";\nimport clearDay from \"./icons/clear-day.png\";\nimport clearNight from \"./icons/clear-night.png\";\nimport cloudyDay from \"./icons/cloudy-day.png\";\nimport cloudyNight from \"./icons/cloudy-night.png\";\nimport fogDay from \"./icons/fog-day.png\";\nimport fogNight from \"./icons/fog-night.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Suggestions({\n  suggest\n}) {\n  _s();\n\n  const [icon, setIcons] = useState([]);\n  suggest.cloudType.map(icons => {\n    switch (icons) {\n      case \"Thunderstorm\":\n        setIcons(icon => [...icon, {\n          icon: thunderstormDay\n        }]);\n        break;\n\n      case \"Drizzle\":\n        setIcons(icon => [...icon, {\n          icon: drizzleDay\n        }]);\n        break;\n\n      case \"Rain\":\n        setIcons(icon => [...icon, {\n          icon: rainDay\n        }]);\n        break;\n\n      case \"Snow\":\n        setIcons(icon => [...icon, {\n          icon: snowDay\n        }]);\n        break;\n\n      case \"Clear\":\n        setIcons(icon => [...icon, {\n          icon: clearDay\n        }]);\n        break;\n\n      case \"Clouds\":\n        setIcons(icon => [...icon, {\n          icon: cloudyDay\n        }]);\n        break;\n\n      default:\n        setIcons(icon => [...icon, {\n          icon: fogDay\n        }]);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggestions-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: suggest.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searching-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: suggestion.city + \", \" + suggestion.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searching-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(suggestion.temp), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: icon[index],\n            alt: \"weather-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Suggestions, \"J2AoSsBy1T06fU05GbYObYN+ha8=\");\n\n_c = Suggestions;\nexport default Suggestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Suggestions\");","map":{"version":3,"sources":["/Users/evernolasco/reactproject/src/components/suggestions.js"],"names":["React","useState","thunderstormDay","thunderstormNight","drizzleDay","drizzleNight","rainDay","rainNight","snowDay","snowNight","clearDay","clearNight","cloudyDay","cloudyNight","fogDay","fogNight","Suggestions","suggest","icon","setIcons","cloudType","map","icons","suggestion","index","city","state","Math","round","temp"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\n//Import all icons\nimport thunderstormDay from \"./icons/thunderstorm-day.png\";\nimport thunderstormNight from \"./icons/thunderstorm-night.png\";\nimport drizzleDay from \"./icons/drizzle-day.png\";\nimport drizzleNight from \"./icons/drizzle-night.png\";\nimport rainDay from \"./icons/rain-day.png\";\nimport rainNight from \"./icons/rain-night.png\";\nimport snowDay from \"./icons/snow-day.png\";\nimport snowNight from \"./icons/snow-night.png\";\nimport clearDay from \"./icons/clear-day.png\";\nimport clearNight from \"./icons/clear-night.png\";\nimport cloudyDay from \"./icons/cloudy-day.png\";\nimport cloudyNight from \"./icons/cloudy-night.png\";\nimport fogDay from \"./icons/fog-day.png\";\nimport fogNight from \"./icons/fog-night.png\";\n\nfunction Suggestions({suggest}){\n    const [icon, setIcons] = useState([]);\n\n    suggest.cloudType.map((icons) => {\n        switch(icons){\n            case \"Thunderstorm\":\n                setIcons((icon) => [...icon, {icon: thunderstormDay}])\n                break;\n            case \"Drizzle\":\n                setIcons((icon) => [...icon, {icon: drizzleDay}])\n                break;\n            case \"Rain\":\n                setIcons((icon) => [...icon, {icon: rainDay}])\n                break;\n            case \"Snow\":\n                setIcons((icon) => [...icon, {icon: snowDay}])\n                break;\n            case \"Clear\":\n                setIcons((icon) => [...icon, {icon: clearDay}])\n                break;\n            case \"Clouds\":\n                setIcons((icon) => [...icon, {icon: cloudyDay}])\n                break;\n            default:\n                setIcons((icon) => [...icon, {icon: fogDay}])\n        }\n    })\n\n    return(\n        <div className=\"suggestions-container\">\n            <div className=\"box\">\n                {suggest.map((suggestion, index) => (\n                    <div className=\"searching-container\">\n                        <p>{suggestion.city+\", \"+suggestion.state}</p>\n\n                        <div className=\"searching-info\">\n                            <p>{Math.round(suggestion.temp)}&deg;</p>\n                            <img src={icon[index]} alt=\"weather-icon\"/>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Suggestions;"]},"metadata":{},"sourceType":"module"}