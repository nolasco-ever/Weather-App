{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/reactproject/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css'; // Import component\n\nimport Forecast from \"./components/forecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"fae6fa0ed6e96f99493161cd7089d3a1\";\n\nfunction App() {\n  _s();\n\n  const [inputText, setInputText] = useState(\"\");\n  const [forecasts, setForecasts] = useState([]);\n  const [form, setState] = useState({\n    day: undefined,\n    temp: undefined,\n    clouds: undefined,\n    high: undefined,\n    low: undefined\n  });\n  var city;\n\n  function inputTextHandler(e) {\n    console.log(e.target.value);\n    setInputText(e.target.value);\n  }\n\n  ;\n\n  async function getWeatherData(e) {\n    e.preventDefault();\n    var location = inputText; // make sure user inputs a valid city and state separated by comma\n\n    if (location.includes(',')) {\n      var locArr = location.split(',');\n      var city = locArr[0];\n      var state = locArr[1]; // fetch data from weather api\n\n      const dataToday = await fetch('https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + state + '&appid=' + API_key).then(res => res.json()).then(dataToday => dataToday);\n      var long = dataToday.coord.lon;\n      var lat = dataToday.coord.lat;\n      const data = await fetch('https://api.openweathermap.org/data/2.5/onecall?lat=' + lat + '&lon=' + long + '&units=imperial&appid=' + API_key).then(res => res.json()).then(data => data);\n      city = data.name; // Create array of unix timestamps that will be converted to weekdays\n\n      var unixArr = [data.daily[0].dt, data.daily[1].dt, data.daily[2].dt, data.daily[3].dt, data.daily[4].dt];\n      var weekDays = new Array(5); // Loop through array and convert each element from unix to weekday\n\n      for (var i = 0; i < unixArr.length; i++) {\n        var dateObject = new Date(unixArr[i] * 1000);\n        var day = dateObject.toLocaleString(\"en-US\", {\n          weekday: \"long\"\n        });\n        weekDays[i] = day;\n      } // Call function\n\n\n      setWeather(weekDays, data);\n    } else {\n      alert(\"Input a city and state separated by a comma\");\n    }\n\n    setInputText(\"\");\n  }\n\n  ; // Add all 5 day forecasts to state\n\n  function setWeather(weekDays, data) {\n    for (var i = 0; i < weekDays.length; i++) {\n      setForecasts(forecasts => forecasts, {\n        day: weekDays[i],\n        temp: data.daily[i].temp.day,\n        clouds: data.daily[i].weather.description,\n        high: data.daily[i].temp.max,\n        low: data.daily[i].temp.min\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: getWeatherData,\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn2.iconfinder.com/data/icons/font-awesome/1792/search-512.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputText,\n          onChange: inputTextHandler,\n          placeholder: \"City, State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-ttl\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      day: [form.day],\n      temp: [form.temp],\n      clouds: [form.clouds],\n      high: [form.high],\n      low: [form.low]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"niO5wYDyC91+ix9MQ5Htq1sP0T4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/evernolasco/reactproject/src/App.js"],"names":["React","useState","Forecast","API_key","App","inputText","setInputText","forecasts","setForecasts","form","setState","day","undefined","temp","clouds","high","low","city","inputTextHandler","e","console","log","target","value","getWeatherData","preventDefault","location","includes","locArr","split","state","dataToday","fetch","then","res","json","long","coord","lon","lat","data","name","unixArr","daily","dt","weekDays","Array","i","length","dateObject","Date","toLocaleString","weekday","setWeather","alert","weather","description","max","min"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,IAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC;AAChCU,IAAAA,GAAG,EAAEC,SAD2B;AAEhCC,IAAAA,IAAI,EAAED,SAF0B;AAGhCE,IAAAA,MAAM,EAAEF,SAHwB;AAIhCG,IAAAA,IAAI,EAAEH,SAJ0B;AAKhCI,IAAAA,GAAG,EAAEJ;AAL2B,GAAD,CAAjC;AAQA,MAAIK,IAAJ;;AAEA,WAASC,gBAAT,CAA0BC,CAA1B,EAA4B;AAE1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAjB,IAAAA,YAAY,CAACa,CAAC,CAACG,MAAF,CAASC,KAAV,CAAZ;AACD;;AAAA;;AAED,iBAAeC,cAAf,CAA8BL,CAA9B,EAAgC;AAC9BA,IAAAA,CAAC,CAACM,cAAF;AACA,QAAIC,QAAQ,GAAGrB,SAAf,CAF8B,CAI9B;;AACA,QAAGqB,QAAQ,CAACC,QAAT,CAAkB,GAAlB,CAAH,EAA0B;AACxB,UAAIC,MAAM,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAb;AAEA,UAAIZ,IAAI,GAAGW,MAAM,CAAC,CAAD,CAAjB;AACA,UAAIE,KAAK,GAAGF,MAAM,CAAC,CAAD,CAAlB,CAJwB,CAMxB;;AACA,YAAMG,SAAS,GAAG,MAAMC,KAAK,CAC3B,uDAAqDf,IAArD,GAA0D,GAA1D,GAA8Da,KAA9D,GAAoE,SAApE,GAA8E3B,OADnD,CAAL,CAEtB8B,IAFsB,CAEhBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFQ,EAGvBF,IAHuB,CAGjBF,SAAD,IAAeA,SAHG,CAAxB;AAKA,UAAIK,IAAI,GAAGL,SAAS,CAACM,KAAV,CAAgBC,GAA3B;AACA,UAAIC,GAAG,GAAGR,SAAS,CAACM,KAAV,CAAgBE,GAA1B;AAEA,YAAMC,IAAI,GAAG,MAAMR,KAAK,CACtB,yDAAuDO,GAAvD,GAA2D,OAA3D,GAAmEH,IAAnE,GAAwE,wBAAxE,GAAiGjC,OAD3E,CAAL,CAEjB8B,IAFiB,CAEXC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFG,EAGlBF,IAHkB,CAGZO,IAAD,IAAUA,IAHG,CAAnB;AAKAvB,MAAAA,IAAI,GAAGuB,IAAI,CAACC,IAAZ,CApBwB,CAsBxB;;AACA,UAAIC,OAAO,GAAG,CAACF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,EAAf,EAAmBJ,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,EAAjC,EAAqCJ,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,EAAnD,EAAuDJ,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,EAArE,EAAyEJ,IAAI,CAACG,KAAL,CAAW,CAAX,EAAcC,EAAvF,CAAd;AACA,UAAIC,QAAQ,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAf,CAxBwB,CA0BxB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACM,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACtC,YAAIE,UAAU,GAAG,IAAIC,IAAJ,CAASR,OAAO,CAACK,CAAD,CAAP,GAAa,IAAtB,CAAjB;AACA,YAAIpC,GAAG,GAAGsC,UAAU,CAACE,cAAX,CAA0B,OAA1B,EAAmC;AAACC,UAAAA,OAAO,EAAE;AAAV,SAAnC,CAAV;AACAP,QAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcpC,GAAd;AACD,OA/BuB,CAkCxB;;;AACA0C,MAAAA,UAAU,CAACR,QAAD,EAAWL,IAAX,CAAV;AACD,KApCD,MAqCI;AACFc,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACD;;AAEDhD,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AAAA,GAlEY,CAoEb;;AACA,WAAS+C,UAAT,CAAoBR,QAApB,EAA8BL,IAA9B,EAAmC;AACjC,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCvC,MAAAA,YAAY,CAACD,SAAS,IAAIA,SAAd,EAAyB;AAACI,QAAAA,GAAG,EAAEkC,QAAQ,CAACE,CAAD,CAAd;AACXlC,QAAAA,IAAI,EAAE2B,IAAI,CAACG,KAAL,CAAWI,CAAX,EAAclC,IAAd,CAAmBF,GADd;AAEXG,QAAAA,MAAM,EAAE0B,IAAI,CAACG,KAAL,CAAWI,CAAX,EAAcQ,OAAd,CAAsBC,WAFnB;AAGXzC,QAAAA,IAAI,EAAEyB,IAAI,CAACG,KAAL,CAAWI,CAAX,EAAclC,IAAd,CAAmB4C,GAHd;AAIXzC,QAAAA,GAAG,EAAEwB,IAAI,CAACG,KAAL,CAAWI,CAAX,EAAclC,IAAd,CAAmB6C;AAJb,OAAzB,CAAZ;AAKD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAElC,cAAhB;AAAgC,QAAA,SAAS,EAAC,YAA1C;AAAA,gCACE;AAAK,UAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAEnB,SAAd;AAAyB,UAAA,QAAQ,EAAEa,gBAAnC;AAAqD,UAAA,WAAW,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BAA8B;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,YATF,eAWE,QAAC,QAAD;AACE,MAAA,GAAG,EAAE,CAACR,IAAI,CAACE,GAAN,CADP;AAEE,MAAA,IAAI,EAAE,CAACF,IAAI,CAACI,IAAN,CAFR;AAGE,MAAA,MAAM,EAAE,CAACJ,IAAI,CAACK,MAAN,CAHV;AAIE,MAAA,IAAI,EAAE,CAACL,IAAI,CAACM,IAAN,CAJR;AAKE,MAAA,GAAG,EAAE,CAACN,IAAI,CAACO,GAAN;AALP;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GApGQZ,G;;KAAAA,G;AAsGT,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\n\n// Import component\nimport Forecast from \"./components/forecast\";\n\nconst API_key = \"fae6fa0ed6e96f99493161cd7089d3a1\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [forecasts, setForecasts] = useState([]);\n  const [form, setState] = useState({\n    day: undefined,\n    temp: undefined,\n    clouds: undefined,\n    high: undefined,\n    low: undefined\n  });\n\n  var city;\n\n  function inputTextHandler(e){\n\n    console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n\n  async function getWeatherData(e){\n    e.preventDefault();\n    var location = inputText;\n\n    // make sure user inputs a valid city and state separated by comma\n    if(location.includes(',')){\n      var locArr = location.split(',');\n\n      var city = locArr[0];\n      var state = locArr[1];\n\n      // fetch data from weather api\n      const dataToday = await fetch(\n        'https://api.openweathermap.org/data/2.5/weather?q='+city+','+state+'&appid='+API_key\n      ).then((res) => res.json())\n      .then((dataToday) => dataToday);\n\n      var long = dataToday.coord.lon;\n      var lat = dataToday.coord.lat;\n\n      const data = await fetch(\n        'https://api.openweathermap.org/data/2.5/onecall?lat='+lat+'&lon='+long+'&units=imperial&appid='+API_key\n      ).then((res) => res.json())\n      .then((data) => data);\n\n      city = data.name;\n\n      // Create array of unix timestamps that will be converted to weekdays\n      var unixArr = [data.daily[0].dt, data.daily[1].dt, data.daily[2].dt, data.daily[3].dt, data.daily[4].dt];\n      var weekDays = new Array(5);\n\n      // Loop through array and convert each element from unix to weekday\n      for (var i = 0; i < unixArr.length; i++){\n        var dateObject = new Date(unixArr[i] * 1000);\n        var day = dateObject.toLocaleString(\"en-US\", {weekday: \"long\"});\n        weekDays[i] = day;\n      }\n\n      \n      // Call function\n      setWeather(weekDays, data);\n    }\n    else{\n      alert(\"Input a city and state separated by a comma\");\n    }\n\n    setInputText(\"\");\n  };\n\n  // Add all 5 day forecasts to state\n  function setWeather(weekDays, data){\n    for (var i = 0; i < weekDays.length; i ++){\n      setForecasts(forecasts => forecasts, {day: weekDays[i],\n                                temp: data.daily[i].temp.day,\n                                clouds: data.daily[i].weather.description,\n                                high: data.daily[i].temp.max,\n                                low: data.daily[i].temp.min})\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img className=\"logo\" src=\"\"/>\n        <form onSubmit={getWeatherData} className=\"search-bar\">\n          <img src=\"https://cdn2.iconfinder.com/data/icons/font-awesome/1792/search-512.png\"/>\n          <input value={inputText} onChange={inputTextHandler} placeholder=\"City, State\" />\n        </form>\n      </header>\n\n      <div className=\"location-ttl\"><h3>{city}</h3></div>\n\n      <Forecast\n        day={[form.day]}\n        temp={[form.temp]}\n        clouds={[form.clouds]}\n        high={[form.high]}\n        low={[form.low]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}