{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/reactproject/src/components/forecast.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSpring, useTrail, animated, interpolate } from \"react-spring\"; // Import component\n\nimport Card from \"./card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forecast({\n  todayForecast,\n  forecasts\n}) {\n  _s();\n\n  // const trailProps = useTrail({\n  //     from: {marginTop: \"-75px\", opacity: 0},\n  //     to: {marginTop: \"0px\", opactiy: 1}\n  // })\n  const springProps = useSpring({\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    }\n  });\n  const trailProps = useTrail(6, {\n    from: {\n      opacity: 0,\n      marginTop: \"-75px\"\n    },\n    to: {\n      opacity: 1,\n      margintTop: \"0px\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: todayForecast[0].id == undefined ? \"none\" : null\n    },\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-card-container\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: {\n          opacity: springProps.opacity\n        },\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          day: todayForecast[0].day,\n          timeOfDay: todayForecast[0].timeOfDay,\n          temp: todayForecast[0].temp,\n          cloudType: todayForecast[0].cloudsType,\n          clouds: todayForecast[0].clouds,\n          high: todayForecast[0].high,\n          low: todayForecast[0].low\n        }, todayForecast[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: trailProps.map((trailimation, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n        style: { ...trailimation\n        },\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          day: forecast[index].day,\n          timeOfDay: forecast[index].timeOfDay,\n          temp: forecast[index].temp,\n          cloudType: forecast[index].cloudsType,\n          clouds: forecast[index].clouds,\n          high: forecast[index].high,\n          low: forecast[index].low\n        }, forecast[index].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Forecast, \"pLkewavXNBiJqB7RqhK/ByhykIA=\", false, function () {\n  return [useSpring, useTrail];\n});\n\n_c = Forecast;\n;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/evernolasco/reactproject/src/components/forecast.js"],"names":["React","useSpring","useTrail","animated","interpolate","Card","Forecast","todayForecast","forecasts","springProps","from","opacity","to","trailProps","marginTop","margintTop","display","id","undefined","day","timeOfDay","temp","cloudsType","clouds","high","low","map","trailimation","index","forecast"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSpring, useTrail, animated, interpolate } from \"react-spring\";\n\n// Import component\nimport Card from \"./card\";\n\nfunction Forecast({todayForecast, forecasts}){\n\n    // const trailProps = useTrail({\n    //     from: {marginTop: \"-75px\", opacity: 0},\n    //     to: {marginTop: \"0px\", opactiy: 1}\n    // })\n\n    const springProps = useSpring({\n        from: {opacity: 0},\n        to: {opacity: 1}\n    })\n\n    const trailProps = useTrail(6, {\n        from: {opacity: 0,\n               marginTop: \"-75px\"},\n        to: {opacity: 1,\n             margintTop: \"0px\"}\n    })\n\n    return(\n        <div style={{display: todayForecast[0].id == undefined ? \"none\" : null}} className=\"container\">\n            <div className=\"today-card-container\">\n                    <animated.div style={{opacity: springProps.opacity}} className=\"card\">\n                        <Card\n                            key={todayForecast[0].id}\n                            day={todayForecast[0].day}\n                            timeOfDay={todayForecast[0].timeOfDay}\n                            temp={todayForecast[0].temp}\n                            cloudType={todayForecast[0].cloudsType}\n                            clouds={todayForecast[0].clouds}\n                            high={todayForecast[0].high}\n                            low={todayForecast[0].low}\n                        />\n                    </animated.div>\n            </div>\n\n            <div className=\"cards-container\">\n                {trailProps.map((trailimation, index) => (\n                     <animated.div style={{...trailimation}} className=\"card\">\n                        <Card\n                            key={forecast[index].id}\n                            day={forecast[index].day}\n                            timeOfDay={forecast[index].timeOfDay}\n                            temp={forecast[index].temp}\n                            cloudType={forecast[index].cloudsType}\n                            clouds={forecast[index].clouds}\n                            high={forecast[index].high}\n                            low={forecast[index].low}\n                        />\n                 </animated.div>\n                ))\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}