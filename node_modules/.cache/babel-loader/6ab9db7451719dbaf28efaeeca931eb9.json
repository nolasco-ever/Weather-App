{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/reactproject/src/components/forecast.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSpring, useTrail, animated, interpolate } from \"react-spring\"; // Import component\n\nimport Card from \"./card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Forecast({\n  todayForecast,\n  forecasts\n}) {\n  _s();\n\n  const springProps = useSpring({\n    opacity: 1,\n    left: \"0px\",\n    from: {\n      opacity: 0,\n      left: \"-275px\"\n    },\n    config: {\n      mass: 1,\n      tension: 270,\n      friction: 25\n    }\n  });\n  const trailProps = useTrail(6, {\n    opacity: 1,\n    top: \"0px\",\n    from: {\n      opacity: 0,\n      top: \"-25px\"\n    },\n    config: {\n      mass: 1,\n      tension: 270,\n      friction: 25\n    }\n  });\n  console.log(trailProps);\n  console.log(springProps);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: todayForecast[0].id == undefined ? \"none\" : null\n    },\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-card-container\",\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: springProps,\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          day: todayForecast[0].day,\n          timeOfDay: todayForecast[0].timeOfDay,\n          temp: todayForecast[0].temp,\n          cloudType: todayForecast[0].cloudsType,\n          clouds: todayForecast[0].clouds,\n          high: todayForecast[0].high,\n          low: todayForecast[0].low\n        }, todayForecast[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: forecasts.map((forecast, index) => /*#__PURE__*/_jsxDEV(animated.div, {\n        style: trailProps[index],\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          day: forecast.day,\n          timeOfDay: forecast.timeOfDay,\n          temp: forecast.temp,\n          cloudType: forecast.cloudsType,\n          clouds: forecast.clouds,\n          high: forecast.high,\n          low: forecast.low\n        }, forecast.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 22\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Forecast, \"pLkewavXNBiJqB7RqhK/ByhykIA=\", false, function () {\n  return [useSpring, useTrail];\n});\n\n_c = Forecast;\n;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/evernolasco/reactproject/src/components/forecast.js"],"names":["React","useSpring","useTrail","animated","interpolate","Card","Forecast","todayForecast","forecasts","springProps","opacity","left","from","config","mass","tension","friction","trailProps","top","console","log","display","id","undefined","day","timeOfDay","temp","cloudsType","clouds","high","low","map","forecast","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSpring, useTrail, animated, interpolate } from \"react-spring\";\n\n// Import component\nimport Card from \"./card\";\n\nfunction Forecast({todayForecast, forecasts}){\n\n    const springProps = useSpring({\n        opacity: 1,\n        left: \"0px\",\n        from: {opacity: 0,\n               left: \"-275px\"},\n        config: {mass: 1,\n            tension: 270,\n            friction: 25}\n    })\n\n    const trailProps = useTrail(6, {\n        opacity: 1,\n        top: \"0px\",\n        from: {opacity: 0, top: \"-25px\"},\n        config: {mass: 1,\n                 tension: 270,\n                 friction: 25}\n    })\n\n    console.log(trailProps);\n    console.log(springProps);\n\n    return(\n        <div style={{display: todayForecast[0].id == undefined ? \"none\" : null}} className=\"container\">\n            <div className=\"today-card-container\">\n                    <animated.div style={springProps} className=\"card\">\n                        <Card\n                            key={todayForecast[0].id}\n                            day={todayForecast[0].day}\n                            timeOfDay={todayForecast[0].timeOfDay}\n                            temp={todayForecast[0].temp}\n                            cloudType={todayForecast[0].cloudsType}\n                            clouds={todayForecast[0].clouds}\n                            high={todayForecast[0].high}\n                            low={todayForecast[0].low}\n                        />\n                    </animated.div>\n            </div>\n\n            <div className=\"cards-container\">\n                {forecasts.map((forecast, index) => (\n                     <animated.div style={trailProps[index]} className=\"card\">\n                        <Card\n                            key={forecast.id}\n                            day={forecast.day}\n                            timeOfDay={forecast.timeOfDay}\n                            temp={forecast.temp}\n                            cloudType={forecast.cloudsType}\n                            clouds={forecast.clouds}\n                            high={forecast.high}\n                            low={forecast.low}\n                        />\n                 </animated.div>\n                ))\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}