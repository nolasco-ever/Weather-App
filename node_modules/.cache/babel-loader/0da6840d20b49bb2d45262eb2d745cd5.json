{"ast":null,"code":"var _jsxFileName = \"/Users/evernolasco/reactproject/src/components/suggestions.js\";\nimport React from \"react\"; //Import all icons\n\nimport thunderstormDay from \"./icons/thunderstorm-day.png\";\nimport thunderstormNight from \"./icons/thunderstorm-night.png\";\nimport drizzleDay from \"./icons/drizzle-day.png\";\nimport drizzleNight from \"./icons/drizzle-night.png\";\nimport rainDay from \"./icons/rain-day.png\";\nimport rainNight from \"./icons/rain-night.png\";\nimport snowDay from \"./icons/snow-day.png\";\nimport snowNight from \"./icons/snow-night.png\";\nimport clearDay from \"./icons/clear-day.png\";\nimport clearNight from \"./icons/clear-night.png\";\nimport cloudyDay from \"./icons/cloudy-day.png\";\nimport cloudyNight from \"./icons/cloudy-night.png\";\nimport fogDay from \"./icons/fog-day.png\";\nimport fogNight from \"./icons/fog-night.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Suggestions({\n  suggest\n}) {\n  console.log(suggest);\n\n  if (timeOfDay) {\n    switch (cloudType) {\n      case \"Thunderstorm\":\n        weatherIcon = thunderstormDay;\n        break;\n\n      case \"Drizzle\":\n        weatherIcon = drizzleDay;\n        break;\n\n      case \"Rain\":\n        weatherIcon = rainDay;\n        break;\n\n      case \"Snow\":\n        weatherIcon = snowDay;\n        break;\n\n      case \"Clear\":\n        weatherIcon = clearDay;\n        break;\n\n      case \"Clouds\":\n        weatherIcon = cloudyDay;\n        break;\n\n      default:\n        weatherIcon = fogDay;\n    }\n  } else {\n    switch (cloudType) {\n      case \"Thunderstorm\":\n        weatherIcon = thunderstormNight;\n        break;\n\n      case \"Drizzle\":\n        weatherIcon = drizzleNight;\n        break;\n\n      case \"Rain\":\n        weatherIcon = rainNight;\n        break;\n\n      case \"Snow\":\n        weatherIcon = snowNight;\n        break;\n\n      case \"Clear\":\n        weatherIcon = clearNight;\n        break;\n\n      case \"Clouds\":\n        weatherIcon = cloudyNight;\n        break;\n\n      default:\n        weatherIcon = fogNight;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggestions-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: suggest.map(suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searching-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: suggestion.city + \", \" + suggestion.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searching-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(suggestion.temp), \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            alt: \"weather-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Suggestions;\nexport default Suggestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Suggestions\");","map":{"version":3,"sources":["/Users/evernolasco/reactproject/src/components/suggestions.js"],"names":["React","thunderstormDay","thunderstormNight","drizzleDay","drizzleNight","rainDay","rainNight","snowDay","snowNight","clearDay","clearNight","cloudyDay","cloudyNight","fogDay","fogNight","Suggestions","suggest","console","log","timeOfDay","cloudType","weatherIcon","map","suggestion","city","state","Math","round","temp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA+B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,MAAGG,SAAH,EAAa;AACT,YAAOC,SAAP;AACI,WAAK,cAAL;AACIC,QAAAA,WAAW,GAAGpB,eAAd;AACA;;AACJ,WAAK,SAAL;AACIoB,QAAAA,WAAW,GAAGlB,UAAd;AACA;;AACJ,WAAK,MAAL;AACIkB,QAAAA,WAAW,GAAGhB,OAAd;AACA;;AACJ,WAAK,MAAL;AACIgB,QAAAA,WAAW,GAAGd,OAAd;AACA;;AACJ,WAAK,OAAL;AACIc,QAAAA,WAAW,GAAGZ,QAAd;AACA;;AACJ,WAAK,QAAL;AACIY,QAAAA,WAAW,GAAGV,SAAd;AACA;;AACJ;AACIU,QAAAA,WAAW,GAAGR,MAAd;AApBR;AAsBH,GAvBD,MAwBI;AACA,YAAOO,SAAP;AACI,WAAK,cAAL;AACIC,QAAAA,WAAW,GAAGnB,iBAAd;AACA;;AACJ,WAAK,SAAL;AACImB,QAAAA,WAAW,GAAGjB,YAAd;AACA;;AACJ,WAAK,MAAL;AACIiB,QAAAA,WAAW,GAAGf,SAAd;AACA;;AACJ,WAAK,MAAL;AACIe,QAAAA,WAAW,GAAGb,SAAd;AACA;;AACJ,WAAK,OAAL;AACIa,QAAAA,WAAW,GAAGX,UAAd;AACA;;AACJ,WAAK,QAAL;AACIW,QAAAA,WAAW,GAAGT,WAAd;AACA;;AACJ;AACIS,QAAAA,WAAW,GAAGP,QAAd;AApBR;AAsBH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKE,OAAO,CAACM,GAAR,CAAaC,UAAD,iBACT;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI;AAAA,oBAAIA,UAAU,CAACC,IAAX,GAAgB,IAAhB,GAAqBD,UAAU,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAA,uBAAIC,IAAI,CAACC,KAAL,CAAWJ,UAAU,CAACK,IAAtB,CAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,GAAG,EAAC,EAAT;AAAY,YAAA,GAAG,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;KAnEQb,W;AAqET,eAAeA,WAAf","sourcesContent":["import React from \"react\";\n\n//Import all icons\nimport thunderstormDay from \"./icons/thunderstorm-day.png\";\nimport thunderstormNight from \"./icons/thunderstorm-night.png\";\nimport drizzleDay from \"./icons/drizzle-day.png\";\nimport drizzleNight from \"./icons/drizzle-night.png\";\nimport rainDay from \"./icons/rain-day.png\";\nimport rainNight from \"./icons/rain-night.png\";\nimport snowDay from \"./icons/snow-day.png\";\nimport snowNight from \"./icons/snow-night.png\";\nimport clearDay from \"./icons/clear-day.png\";\nimport clearNight from \"./icons/clear-night.png\";\nimport cloudyDay from \"./icons/cloudy-day.png\";\nimport cloudyNight from \"./icons/cloudy-night.png\";\nimport fogDay from \"./icons/fog-day.png\";\nimport fogNight from \"./icons/fog-night.png\";\n\nfunction Suggestions({suggest}){\n    console.log(suggest);\n    if(timeOfDay){\n        switch(cloudType){\n            case \"Thunderstorm\":\n                weatherIcon = thunderstormDay;\n                break;\n            case \"Drizzle\":\n                weatherIcon = drizzleDay;\n                break;\n            case \"Rain\":\n                weatherIcon = rainDay;\n                break;\n            case \"Snow\":\n                weatherIcon = snowDay;\n                break;\n            case \"Clear\":\n                weatherIcon = clearDay;\n                break;\n            case \"Clouds\":\n                weatherIcon = cloudyDay;\n                break;\n            default:\n                weatherIcon = fogDay;\n        }\n    }\n    else{\n        switch(cloudType){\n            case \"Thunderstorm\":\n                weatherIcon = thunderstormNight;\n                break;\n            case \"Drizzle\":\n                weatherIcon = drizzleNight;\n                break;\n            case \"Rain\":\n                weatherIcon = rainNight;\n                break;\n            case \"Snow\":\n                weatherIcon = snowNight;\n                break;\n            case \"Clear\":\n                weatherIcon = clearNight;\n                break;\n            case \"Clouds\":\n                weatherIcon = cloudyNight;\n                break;\n            default:\n                weatherIcon = fogNight;\n        }\n    }\n\n    return(\n        <div className=\"suggestions-container\">\n            <div className=\"box\">\n                {suggest.map((suggestion) => (\n                    <div className=\"searching-container\">\n                        <p>{suggestion.city+\", \"+suggestion.state}</p>\n\n                        <div className=\"searching-info\">\n                            <p>{Math.round(suggestion.temp)}&deg;</p>\n                            <img src=\"\" alt=\"weather-icon\"/>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Suggestions;"]},"metadata":{},"sourceType":"module"}